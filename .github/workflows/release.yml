name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            goos: windows
            goarch: amd64
            suffix: '.exe'
          - os: macos-latest
            goos: darwin
            goarch: arm64
            suffix: '-darwin-arm64'
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            suffix: '-linux-amd64'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      
      - if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          install: |
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-libwebp
      - if: runner.os == 'Windows'
        run: |
          echo "C:/msys64/mingw64/bin" >> $GITHUB_PATH
          echo "C:/msys64/usr/bin" >> $GITHUB_PATH
          echo "CC=gcc.exe" >> $GITHUB_ENV
          echo "CXX=g++.exe" >> $GITHUB_ENV
          echo 'CGO_CFLAGS=-IC:/msys64/mingw64/include' >> $GITHUB_ENV
          echo 'CGO_LDFLAGS=-LC:/msys64/mingw64/lib -lwebp' >> $GITHUB_ENV

      - if: runner.os == 'macOS'
        run: brew install webp
      
      - if: runner.os == 'Linux'
        run: |
          wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.4.0.tar.gz
          tar xvf libwebp-1.4.0.tar.gz
          cd libwebp-1.4.0
          ./configure
          make
          sudo make install

      - env:
          CGO_ENABLED: 1
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -o ccfolia-room-minifier${{ matrix.suffix }} ccfolia-room-minifier.go

      - uses: softprops/action-gh-release@v2
        with:
          files: ccfolia-room-minifier${{ matrix.suffix }}
